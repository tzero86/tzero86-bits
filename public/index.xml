<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tzero86.bits</title>
    <link>https://tzero86-bits.netlify.app/</link>
    <description>Recent content on tzero86.bits</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 16 Aug 2020 14:00:11 -0400</lastBuildDate>
    
	<atom:link href="https://tzero86-bits.netlify.app/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Alfred_writeup.sh</title>
      <link>https://tzero86-bits.netlify.app/posts/alfred_writeup/</link>
      <pubDate>Sun, 16 Aug 2020 14:00:11 -0400</pubDate>
      
      <guid>https://tzero86-bits.netlify.app/posts/alfred_writeup/</guid>
      <description>Alfred - TryHackme&amp;rsquo;s Room Writeup [Task 1] - Getting Initial Access For this room it seems we&amp;rsquo;ll need Nishang in order to gain access to the machine by using reverse shell scripts.
So lets start by listing the links to get this Nishang tool:
 Nishang: Click here to access the repository and get this Powershell toolset. Alfred Room on THM: Click here to visit this room on TryHackme platform.  Ok once you have that tool downloaded to your system we can get started.</description>
    </item>
    
    <item>
      <title>4b0ut m3</title>
      <link>https://tzero86-bits.netlify.app/page/about/</link>
      <pubDate>Sun, 16 Aug 2020 00:30:23 -0400</pubDate>
      
      <guid>https://tzero86-bits.netlify.app/page/about/</guid>
      <description># Lasciate ogne speranza, voi ch&amp;rsquo;intrate
I&amp;rsquo;m a software quality engineer by day, a perpetual student by night. Trying hard to learn ethical hacking and penetration testing. This is my space, a refuge for the noob. I also play bass when somehow I find myself away from a computer.
This is just the start and I really mean the start, I been learning this for just about 3 months. Can&amp;rsquo;t image the amount of things I&amp;rsquo;ve yet to learn.</description>
    </item>
    
    <item>
      <title>Gobuster_basics.sh</title>
      <link>https://tzero86-bits.netlify.app/posts/gobuster/</link>
      <pubDate>Sat, 15 Aug 2020 21:25:53 -0400</pubDate>
      
      <guid>https://tzero86-bits.netlify.app/posts/gobuster/</guid>
      <description>#GoBuster Basic usage# GoBuster brute-force tool for URIs (directories and files), DNS subdomains and virtual host names.
 Get GoBuster: If you need to download this tool to your system, visit this link  To start with the basic usage for this tool, let&amp;rsquo;s review some of the flags we can specify to run gobuster.
 .table { width: 100%; margin-bottom: 1rem; color: #212529 } .table td, .table th { padding: .</description>
    </item>
    
    <item>
      <title>Get_SUID.sh</title>
      <link>https://tzero86-bits.netlify.app/posts/get_suid/</link>
      <pubDate>Sat, 15 Aug 2020 18:13:59 -0400</pubDate>
      
      <guid>https://tzero86-bits.netlify.app/posts/get_suid/</guid>
      <description>#How to locate SUID Files using Find command#  In Linux, SUID (set owner userId upon execution) is a special type of &amp;gt;file permission given to a file. SUID gives temporary permissions to a &amp;gt;user to run the program/file with the permission of the file owner (rather &amp;gt;than the user who runs it). {TryHackme}
 For example, the binary file to change your password has the SUID bit set on it (/usr/bin/passwd).</description>
    </item>
    
    <item>
      <title>Nmap_basics.sh</title>
      <link>https://tzero86-bits.netlify.app/posts/nmap_basics/</link>
      <pubDate>Sat, 15 Aug 2020 16:56:33 -0400</pubDate>
      
      <guid>https://tzero86-bits.netlify.app/posts/nmap_basics/</guid>
      <description>#NMAP - Basic Usage#  nmap is an free, open-source and powerful tool used to discover hosts and services on a computer network. In our example, we are using nmap to scan this machine to identify all services that are running on a particular port. nmap has many capabilities, below &amp;gt; is a table summarizing some of the functionality it provides. {from TryHackme}
 Here are some of the basic switches/flags that your can use when running an nmap scan:</description>
    </item>
    
  </channel>
</rss>